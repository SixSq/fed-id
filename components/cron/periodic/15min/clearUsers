#!/bin/sh

KC_REALM=${KEYCLOAK_REALM:=master}
KC_URL=http://keycloak:8080/auth
EXCLUDE_USERS=$EXCLUDED_USERS

# log in to keycloak
kc_login() {
	curl -s -X POST "$KC_URL/realms/$KC_REALM/protocol/openid-connect/token" \
	  -H "Content-Type: application/x-www-form-urlencoded" \
	  -d "username=$KEYCLOAK_USER" \
	  -d "password=$KEYCLOAK_PASSWORD" \
	  -d "grant_type=password" \
	  -d "client_id=admin-cli"
}

# log out of keycloak
kc_logout() {
	curl -s -X POST "$KC_URL/realms/$KC_REALM/protocol/openid-connect/logout" \
		 -H "Authorization: Bearer $AC_TKN" \
		 -H "Content-Type: application/x-www-form-urlencoded" \
		 -d "username=$KEYCLOAK_USER" \
		 -d "client_id=admin-cli" \
		 -d "refresh_token=$RF_TKN"
}

# retrieve id and username of every user
kc_users() {
	curl -s -X GET "$KC_URL/admin/realms/$KC_REALM/users" \
		 -H "Accept: application/json" \
		 -H "Authorization: Bearer $AC_TKN" | jq 'map({id: .id, username: .username})'
}

# retrieve ids of every client
kc_clients() {
	curl -s -X GET "$KC_URL/admin/realms/$KC_REALM/clients" \
		 -H "Accept: application/json" \
		 -H "Authorization: Bearer $AC_TKN" | jq -r '.[]|.id'
}

# retrieve users with active or offline sessions
# param: id of a keycloak client (NOT clientId)
kc_sessionusers() {
	clientid=$1
	actv=$(curl -s -X GET "$KC_URL/admin/realms/$KC_REALM/clients/$clientid/user-sessions" \
				  -H "Accept: application/json" \
				  -H "Authorization: Bearer $AC_TKN" | jq 'map({id: .userId, username: .username})')
	offl=$(curl -s -X GET "$KC_URL/admin/realms/$KC_REALM/clients/$clientid/offline-sessions" \
				  -H "Accept: application/json" \
				  -H "Authorization: Bearer $AC_TKN" | jq 'map({id: .userId, username: .username})')
	echo "[$actv,$offl]" | jq '.[0] + .[1] | unique'
}

kc_deleteuser() {
	userid=$1
	curl -s -X DELETE "$KC_URL/admin/realms/$KC_REALM/users/$userid" \
		 -H "Authorization: Bearer $AC_TKN"
}

command -v jq >/dev/null 2>&1 || {
	echo >&2 "I require jq but it is not installed.  Aborting.";
	exit 1; }
command -v tr >/dev/null 2>&1 || {
	echo >&2 "I require tr but it is not installed.  Aborting.";
	exit 1; }

response=$(kc_login)
AC_TKN=$(echo "$response" | jq -r '.access_token')
ID_TKN=$(echo "$response" | jq -r '.id_token')
RF_TKN=$(echo "$response" | jq -r '.refresh_token')

users=$(kc_users)
clients=$(kc_clients)

sessions="[]"
for client in $clients; do
	clientsess=$(kc_sessionusers $client)
	sessions=$(echo "[$sessions,$clientsess]" | jq '.[0] + .[1] | unique')
done

keepusers=$sessions
for u in $(echo $EXCLUDE_USERS | tr ";" " "); do
	keepuser=$(echo $users | jq --arg u $u 'map(select(.username == $u))')
	keepusers=$(echo "[$keepusers,$keepuser]" | jq '.[0] + .[1] | unique')
done

delusers=$(echo "[$users,$keepusers]" | jq -r '.[0] - .[1] | .[] | .id')
delcount=0
for user in $delusers; do
	kc_deleteuser $user
	delcount=$(expr $delcount + 1)
done
kc_logout

echo "Deleted $delcount users"
